generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  email     String    @unique
  name      String
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Session   Session[]
  Blogs     Blog[]    @relation("AccountBlogs")
  role      String    @default("User")
}

model Session {
  token     String    @id @map("_id") 
  accountId String    @db.ObjectId   
  account   Account   @relation(fields: [accountId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  image       String
  name        String
  description String
  price       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Blog {
  id          String           @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  content     String
  views       BigInt           @default(0)
  categories  BlogToCategory[] 
  tags        BlogToTag[]      
  postById    String           @db.ObjectId
  postBy      Account          @relation("AccountBlogs", fields: [postById], references: [id], onDelete: Cascade)
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
}

model BlogCategory {
  id          String           @id @default(auto()) @map("_id") @db.ObjectId
  name        String           @unique
  blogs       BlogToCategory[] 
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
}

model TagBlog {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String       @unique
  image       String
  blogs       BlogToTag[] 
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model BlogToCategory {
  id          String           @id @default(auto()) @map("_id") @db.ObjectId
  blogId      String           @db.ObjectId
  categoryId  String           @db.ObjectId
  blog        Blog             @relation(fields: [blogId], references: [id])
  category    BlogCategory     @relation(fields: [categoryId], references: [id])
}

model BlogToTag {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  blogId      String       @db.ObjectId
  tagId       String       @db.ObjectId
  blog        Blog         @relation(fields: [blogId], references: [id])
  tag         TagBlog      @relation(fields: [tagId], references: [id])
}
